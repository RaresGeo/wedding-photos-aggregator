import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import { useEffect, useState } from "react";
import Glow from "./components/Glow";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};
type Particle = {
  index: number;
  top: number;
  left: number;
};

const GLOW_PARTICLE_COUNT = 15;
const MIN_DISTANCE = 10;

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const glowParticles = [
    {
      index: 0,
      top: Math.random() * 100,
      left: Math.random() * 100,
    },
  ];

  const distance = (p1: Particle, p2: Particle) => {
    return Math.sqrt(
      Math.pow(p1.top - p2.top, 2) + Math.pow(p1.left - p2.left, 2)
    );
  };

  for (let i = 1; i < GLOW_PARTICLE_COUNT; i++) {
    let tooClose;
    let newParticle: Particle;
    do {
      newParticle = {
        index: i,
        top: Math.random() * 100,
        left: Math.random() * 100,
      };
      tooClose = glowParticles.some(
        (p) => distance(p, newParticle) < MIN_DISTANCE
      );
    } while (tooClose);
    glowParticles.push(newParticle);
  }
  return (
    <html lang="en">
      <body className={inter.className}>
        {glowParticles.map((particle) => (
          <Glow key={particle.index} {...particle} />
        ))}

        <div className="container">{children}</div>
      </body>
    </html>
  );
}
